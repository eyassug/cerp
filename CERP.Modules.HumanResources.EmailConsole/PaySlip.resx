<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIHDQ8QERATEBAPEBQPDRAQEBAQFQ4NFREWGRkRFBQZ
        HCogGBolGxUVITEhJSorLy46FyEzODMsPCkuLiv/2wBDAQoKCg4NDhsQEBstJCAmLDYsNTcsLiwsLCws
        LCwsLCwsNywtLCwsLDQsLCwsLSwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCADhAOEDAREAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcBAwQFBgII/8QAQRAAAgIBAQQECAwFBAMAAAAAAAECAxEEBQYSIQcx
        QVETFjJUYXGB0RQiNVJykZKho7Gy0lNzdLPBFyMzkyRjwv/EABoBAQACAwEAAAAAAAAAAAAAAAADBQEC
        BAb/xAAyEQEAAgECAgcGBgMBAAAAAAAAAQIDBBESUQUTFCExM1IyQXGBodEiQmGRwfAVI7Hh/9oADAMB
        AAIRAxEAPwDmi/eOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyNn6KzaNsKaoudk3iMV+bfYl3mt7RWN5SY8dsluGvi
        lbYXRzptFGMtT/5FvasyjXF9yS5y9b+pFbk1d7ez3QvMPR2Okfj75+jfrd3QpcPwTTd3/DU5fXjJB1uT
        nLq7Ph8OGP2hpNudHml18JOhfBrcZi45cG+6UH1L1Y9pLj1d6+PfDmzdH4rx+HulE+09BZsu6dNseGyD
        xJdafc0+1Ncy0peL13hRZcdsdprbxdj0W7Io2q9X4emNvAquDjWeHi8JnH1L6jk1l7V24ZWPRuKl5txR
        v4fy73xQ0HmlX2X7zi6/J6pWnZcPphXxQ0HmlX2X7x1+T1HZcPpg8UNB5pV9l+8dfk9R2XD6YRHvxpK9
        BtK+qqCrrjwcMY9SzXFv72yz01ptjiZUOtpWuaYrG0JJ3a3X0eq0Gksnpa5Tnp65Tk08yk4JtvmcGXNe
        LzETPiucGmxTirM1jwbPxQ0HmlX2X7yPr8nqS9lw+mHme52gkmvglaz2pSX3pjr8nqJ0mH0w0W3ejfT6
        muT0uabVlxi5ylCb+a+LLj619RNj1l4n8XfDkzdG47R/r7p+iKLqpUSlCScZQbjOL64yTw0/aWcTE98K
        O1ZrO0pT3A3d0u0Nm1W26euyyUrFKUk22lZJL7it1OW9ckxErzQ6fHfDE2rEy6PxQ0HmlX2X7yDr8nql
        19lw+mHizc3QTWHpK19Hij96ZmM+SPzMTpMM/lhye9vR3CiqV2j4k4JynRKTnxRS5uDfPPoec/n04dXO
        +13DqejqxHFj/ZGpYKUAAAAAAAAAAJU6JdkRrot1cl8e2Tqqfzao9ePXL9KK3W5N7RRedGYYis5Of/FO
        k7eazQOGkom65Sjx3zjykoPKjBPszhttc+rvGkwxb8VjpHVWptSs7T70XeEfFxZfFnPFl5z356yx2jbZ
        S8U777pK3I36hVp51667Dqa8FZJSnKyDz8V4Tbax1+kr9Rpp4t8cLjR66OCYyz4ND0g7c0u3rKZ0KfHC
        LhZOUOFThnMUueeT4uztJ9NivjiYs5tdnxZpiaeLd9DXla71U/naRa78v95Ojorxv8v5ZPS9bKqvScMn
        HM7M8Lazyj3GmiiJmd0nSdpitdpRn8Ms/iz+3L3lhwV5Kbrb85Phln8Wf25e8cFeR1t+crU5uby22+9t
        tm0REeDSZmZ3lPu6XyZov6ar9CKTN7c/F6rTeTX4QiDfHVWQ2nrErJpK6WEpySXsyWmCtZxwodXe8ZrR
        Ey1Ne0LqmpRusjJc042TTT9eSWaV5OeMuSPzT+6dd09ZPaGz9NbbzsnWnN4S4mm1xY9KSftKbLWK3mIe
        l015vira3jsiXpFrjXtbU8PbwSlj57rjks9L5UKLpCIjPOyRujH5Io+nb/dkcGq82Vv0f5EOH6TtROra
        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
        AAAAAAAAAAAAAAAAAAAAAAAD/9k=
</value>
  </data>
  <metadata name="bindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>